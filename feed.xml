<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://ruffalolavoisier.github.io/</id><title>Unforgettable</title><subtitle>"우공이라는 노인이 산을 옮겼으니"</subtitle> <updated>2024-11-27T11:24:34+09:00</updated> <author> <name>Ruffalo</name> <uri>https://ruffalolavoisier.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://ruffalolavoisier.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://ruffalolavoisier.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator> <rights> © 2024 Ruffalo </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Upgrade Blog Core to v7.1.1</title><link href="https://ruffalolavoisier.github.io/posts/upgrade_blog_core_to_v7_1_1/" rel="alternate" type="text/html" title="Upgrade Blog Core to v7.1.1" /><published>2024-11-27T01:26:51+09:00</published> <updated>2024-11-27T03:42:59+09:00</updated> <id>https://ruffalolavoisier.github.io/posts/upgrade_blog_core_to_v7_1_1/</id> <content src="https://ruffalolavoisier.github.io/posts/upgrade_blog_core_to_v7_1_1/" /> <author> <name>Ruffalo</name> </author> <category term="blog" /> <category term="git" /> <summary>오랜 시간 기본 브랜치와 멀어진 구석기 브랜치 병합에 관하여</summary> </entry> <entry><title>How to use multiple git account ssh key in local</title><link href="https://ruffalolavoisier.github.io/posts/how_to_use_multiple_git_account_ssh_key_in_local/" rel="alternate" type="text/html" title="How to use multiple git account ssh key in local" /><published>2024-11-24T23:25:21+09:00</published> <updated>2024-11-27T00:54:33+09:00</updated> <id>https://ruffalolavoisier.github.io/posts/how_to_use_multiple_git_account_ssh_key_in_local/</id> <content src="https://ruffalolavoisier.github.io/posts/how_to_use_multiple_git_account_ssh_key_in_local/" /> <author> <name>Ruffalo</name> </author> <category term="git" /> <summary>git 계정을 여러개 사용하다보면 ssh 를 설정했음에도 다른 계정의 저장소로 push 가 되지 않는 걸 경험할 수 있다. 이때 간단한 구글링을 통해 해결 방법을 알 수 있었다. 각 저장소에 어떤 SSH 키가 사용될지 확인하려면 SSH 구성에 구성을 추가하여 각 키를 특정 저장소에 연결해야 한다. ssh-add ~/.ssh/id_rsa_sub ssh 를 추가해준다. Host github.com Hostname github.com AddKeysToAgent yes UseKeychain yes IdentityFile ~/.ssh/id_rsa_main Host github.com-sub Hostname github.com AddKeysToAgent yes...</summary> </entry> <entry><title>Open-smartwatch Time API 에 관한 고찰</title><link href="https://ruffalolavoisier.github.io/posts/refactoring_api_usage/" rel="alternate" type="text/html" title="Open-smartwatch Time API 에 관한 고찰" /><published>2024-10-18T00:05:00+09:00</published> <updated>2024-11-27T00:54:33+09:00</updated> <id>https://ruffalolavoisier.github.io/posts/refactoring_api_usage/</id> <content src="https://ruffalolavoisier.github.io/posts/refactoring_api_usage/" /> <author> <name>Ruffalo</name> </author> <category term="open-smartwatch" /> <category term="open-source" /> <summary>시작 Watchfaces 를 보면 시계와 날짜를 가져오는 API 가 있다. 시간대별로 로컬 타임과 듀얼 타임을 가져올 수 있는데 다음과 같은 API 로 열려 있다. uint32_t years = 0; uint32_t month = 0; uint32_t day = 0; OswHal::getInstance()-&amp;amp;gt;getTime(&amp;amp;amp;years, &amp;amp;amp;month, &amp;amp;amp;day); 각 구하고자 하는 데이터의 주소를 넘겨주면 API 에서 현재 날짜를 데이터 주소에 넣어준다. 그런데 이를 이상하게 보게 되었다. 이걸 하나의 구조체로 만들면 어떨까 생각이 되었다. 구조도 OswTime, OswDate API Diagram 위와 같은 구조도를 가지면서 OswHal 에 있는 OswDate...</summary> </entry> <entry><title>RollBack, Google Play system update</title><link href="https://ruffalolavoisier.github.io/posts/rollback_google_play_system_update/" rel="alternate" type="text/html" title="RollBack, Google Play system update" /><published>2024-10-14T12:25:09+09:00</published> <updated>2024-11-27T00:54:33+09:00</updated> <id>https://ruffalolavoisier.github.io/posts/rollback_google_play_system_update/</id> <content src="https://ruffalolavoisier.github.io/posts/rollback_google_play_system_update/" /> <author> <name>Ruffalo</name> </author> <category term="android" /> <summary>구글 플레이 시스템 업데이트 구글 플레이 시스템 업데이트은 재부팅이 필요한 설치 작업인데 수동으로 가능하며 자동으로 업데아트 역시 가능하다. 근래 사용하는 DBI 가 작동하지 않는 일이 발생하여 확인해보니 구글 플레이 시스템 업데아트 &amp;amp;lt;2024.8.1&amp;amp;gt; 가 적용된 단말기 모든 곳에서 발생하는 것으로 확인되었다. 이에 따라 단말기를 깨끗하게 밀어버리고 시스템 업데이트와 모든 업데이트를 다 해제하고 재루팅 시도하였다. 그런데 얼마 지나서 다시 시스템 업데이트가 되어 DBI 가 작동하지 않은 현상이 발생하였다. 이에 따라 모든 업데이트가 해제된 것이 아니었으며 다른 방법을 찾아야했다. 구글링 끝에 안드로이드 레퍼런스 사이트에서 구글 플레이 시스템 업데이트 롤백에 관한 내용이 있었다. 이...</summary> </entry> <entry><title>Open-smartwatch protocol 분석 및 연구개발</title><link href="https://ruffalolavoisier.github.io/posts/osw_protocol_research/" rel="alternate" type="text/html" title="Open-smartwatch protocol 분석 및 연구개발" /><published>2024-10-12T04:52:35+09:00</published> <updated>2024-11-27T00:54:33+09:00</updated> <id>https://ruffalolavoisier.github.io/posts/osw_protocol_research/</id> <content src="https://ruffalolavoisier.github.io/posts/osw_protocol_research/" /> <author> <name>Ruffalo</name> </author> <category term="reverse-engineering" /> <category term="android" /> <category term="osw" /> <summary>현재 개발하고 있는 스마트워치를 살펴보면 UI 적으로나 기능적으로 끌어올리고 있다. 센서 데이터를 통해서 가공하여 여러 앱으로 정보를 표현하는 Fitness App 을 만들었다. 그때 이러한 데이터와 동시에 모바일 데이터를 조합해 연동하여 더 기능을 확장하고 많은 API 와 데이터를 가공하려고 한다. 먼저 연동 시 사용하는 프로토콜에 대해서 알아봐야 하는데 시중에 기성 앱으로 사용되는 앱들의 프로토콜 데이터를 확인해볼 수 있다. 개발 시 기성 앱에 디바이스를 연결하여 오고가는 데이터를 역공학으로 캡쳐하고 해당 포로토콜 기반으로 Open-smartwatch 역시 그 기준을 맞춰가고자 한다. 본문에서는 Open-smartwatch 에서 개발된 프로토콜에 대한 spec 과 BLE 앱에서 송수신 되는 데이터...</summary> </entry> </feed>
